// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  name            String?
  password        String
  role            Role      @default(USER)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  skills          Skill[]
  projects        Project[]
  experiences     Experience[]
}

enum Role {
  ADMIN
  USER
}

model SkillCategory {
  id          String  @id @default(uuid())
  name        String
  description String?
  skills      Skill[]
}

model Skill {
  id            String        @id @default(uuid())
  name          String
  description   String?
  icon          String?       // Store icon name or path
  proficiency   Int           @default(0) // 0-100 scale
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  category      SkillCategory @relation(fields: [categoryId], references: [id])
  categoryId    String
  creator       User          @relation(fields: [creatorId], references: [id])
  creatorId     String
}

model Project {
  id          String    @id @default(uuid())
  title       String
  description String
  imageUrl    String?
  liveUrl     String?
  githubUrl   String?
  technologies String[]
  featured    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  creator     User      @relation(fields: [creatorId], references: [id])
  creatorId   String
}

model Experience {
  id          String    @id @default(uuid())
  title       String
  company     String
  location    String?
  startDate   DateTime
  endDate     DateTime?
  current     Boolean   @default(false)
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  creator     User      @relation(fields: [creatorId], references: [id])
  creatorId   String
}
